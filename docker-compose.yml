version: "3.9"
services:
  trino:
    ports:
      - "8081:8080"
    image: "trinodb/trino:448"
    volumes:
      - ./docker/trino/etc:/usr/lib/trino/etc:ro
      - ./docker/trino/catalog:/etc/trino/catalog
    environment:
      CATALOG_MANAGEMENT: dynamic

  postgres:
    ports:
      - "5433:5432"
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
    container_name: postgres
    volumes:
      - ./docker/postgres/data:/data
    environment:
      POSTGRES_USER: dataapi
      POSTGRES_PASSWORD: dataapi

#  metastore_db:
#    image: postgres:16
#    hostname: metastore_db
#    environment:
#      POSTGRES_USER: hive
#      POSTGRES_PASSWORD: hive
#      POSTGRES_DB: metastore

#  hive-metastore:
#    hostname: hive-metastore
#    image: 'starburstdata/hive:3.1.2-e.18'
#    ports:
#      - '9083:9083' # Metastore Thrift
#    environment:
#      HIVE_METASTORE_DRIVER: org.postgresql.Driver
#      HIVE_METASTORE_JDBC_URL: jdbc:postgresql://metastore_db:5432/metastore
#      HIVE_METASTORE_USER: hive
#      HIVE_METASTORE_PASSWORD: hive
#      HIVE_METASTORE_WAREHOUSE_DIR: s3://datalake/
#      S3_ENDPOINT: http://minio:9000
#      S3_ACCESS_KEY: minio
#      S3_SECRET_KEY: minio123
#      S3_PATH_STYLE_ACCESS: "true"
#      REGION: ""
#      HIVE_METASTORE_USERS_IN_ADMIN_ROLE: "admin"
#    depends_on:
#      - metastore_db

  minio:
    hostname: minio
    image: 'minio/minio:RELEASE.2022-05-26T05-48-41Z'
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data --console-address ":9001"

  # This job will create the "datalake" bucket on Minio
  mc-job:
    image: 'minio/mc:RELEASE.2022-05-09T04-08-26Z'
    entrypoint: |
      /bin/bash -c "
      sleep 5;
      /usr/bin/mc config --quiet host add myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb --quiet myminio/datalake
      "
    depends_on:
      - minio

  superset:
    build: ./docker/superset
    ports:
      - "8088:8088"
    volumes:
      - superset-data:/app/superset_home
    environment:
      SUPERSET_SECRET_KEY: "oh-so-secret"


  api:
      build:
        context: .
        dockerfile: ./docker/api/Dockerfile
      ports:
        - "6001:80"
      volumes:
        - ./src:/code
      environment:
        TRINO_HOST: "trino"
        TRINO_PORT: 8080
        TRINO_USER: "admin"

  pipeline:
    build:
      context: .
      dockerfile: ./docker/pipeline/Dockerfile
    volumes:
      - ./src:/code
    environment:
      TRANSACTIONAL_POSTGRES_USERNAME: "oh-so-secret"
      TRANSACTIONAL_POSTGRES_HOSTNAME: ""
      TRANSACTIONAL_POSTGRES_PORT: 5432
      TRANSACTIONAL_POSTGRES_PASSWORD: ""
      REPORTING_POSTGRES_USERNAME: "oh-so-secret"
      REPORTING_POSTGRES_HOSTNAME: ""
      REPORTING_POSTGRES_PORT: 5433
      REPORTING_POSTGRES_PASSWORD: ""
    depends_on:
      - postgres
      - trino
      - api

networks:
  default:
    name: dbt-net
    external: true

volumes:
  superset-data:
    driver: local